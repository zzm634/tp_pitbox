{"version":3,"file":"pitbox-preview.js","sourceRoot":"","sources":["src/pitbox-preview.ts"],"names":[],"mappings":"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","sourcesContent":["import { LitElement } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\n\r\ntype RectCoords = {\r\n    top: number,\r\n    height: number,\r\n    left: number,\r\n    width: number,\r\n}\r\n\r\ntype PitboxStyle = {\r\n    /** Width of the source images, in pixels */\r\n    width: number,\r\n    /** Height of the source images, in pixels */\r\n    height: number,\r\n    /** Image source for \"black\" pitbox reference */\r\n    black: string,\r\n    /** Image source for \"white\" pitbox reference */\r\n    white: string,\r\n    /** Location of the roof of the pitbox within the reference images. */\r\n    roof: RectCoords,\r\n    /** Location of the toolbox area of the pit within the reference images. */\r\n    box: RectCoords,\r\n}\r\n\r\nconst PITBOXES: Record<string, PitboxStyle> = {\r\n    \"road\": {\r\n        width: 1280,\r\n        height: 1280,\r\n        black: \"assets/road_black.png\",\r\n        white: \"assets/road_white.png\",\r\n        roof: {\r\n            left: 0,\r\n            width: 1280,\r\n            top: 0,\r\n            height: 450\r\n        },\r\n        box: {\r\n            left: 0,\r\n            width: 1280,\r\n            top: 450,\r\n            height: (1280 - 450)\r\n        },\r\n    }\r\n}\r\n\r\nfunction createResolvablePromise<T>() {\r\n    const promiseState = {\r\n        status: \"wait\" as \"wait\" | \"resolved\" | \"rejected\",\r\n        resolvedValue: null as any,\r\n        rejectedError: null as any,\r\n        resolve: (_value: T) => { },\r\n        reject: (_err: any) => { },\r\n    }\r\n\r\n    // Set up these functions first, in case the promise is manually resolved before it has a chance to run on its own\r\n    promiseState.resolve = (value) => {\r\n        if (promiseState.status === \"wait\") {\r\n            promiseState.status = \"resolved\";\r\n            promiseState.resolvedValue = value;\r\n        }\r\n    };\r\n\r\n    promiseState.reject = (err) => {\r\n        if (promiseState.status === \"wait\") {\r\n            promiseState.status = \"rejected\";\r\n            promiseState.rejectedError = err;\r\n        }\r\n    };\r\n\r\n    const promise = new Promise<T>((res, rej) => {\r\n        // If the promise was manually resolved before this handler runs, resolve/reject immediately\r\n        if (promiseState.status === \"resolved\") {\r\n            res(promiseState.resolvedValue);\r\n        } else if (promiseState.status === \"rejected\") {\r\n            rej(promiseState.rejectedError);\r\n        } else {\r\n\r\n            // otherwise, replace the handlers with these ones\r\n            promiseState.resolve = (value) => {\r\n                // check \"wait\" again in case they try to call resolve or reject more than once.\r\n                if (promiseState.status === \"wait\") {\r\n                    promiseState.status = \"resolved\";\r\n                    promiseState.resolvedValue = value;\r\n                    res(value);\r\n                }\r\n            };\r\n\r\n            promiseState.reject = (err) => {\r\n                if (promiseState.status === \"wait\") {\r\n                    promiseState.status = \"rejected\";\r\n                    promiseState.rejectedError = err;\r\n                    rej(err);\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    return {\r\n        promise,\r\n        resolve: (value: T) => promiseState.resolve(value),\r\n        reject: (err: any) => promiseState.reject(err),\r\n    };\r\n}\r\n\r\n@customElement('pitbox-preview')\r\nexport class PitboxPreview extends LitElement {\r\n\r\n    @property()\r\n    roofColor = \"#00FF00\";\r\n\r\n    @property()\r\n    boxColor = \"#FF0000\";\r\n\r\n    @property()\r\n    boxType = \"road\";\r\n\r\n    blackImg = null as null | HTMLImageElement;\r\n    whiteImg = null as null | HTMLImageElement;\r\n    canvas = null as null | HTMLCanvasElement;\r\n\r\n    override render() {\r\n        const pitboxStyle = PITBOXES[this.boxType];\r\n\r\n        if(!pitboxStyle) {\r\n            return;\r\n        }\r\n\r\n        const whiteImgSrc = pitboxStyle.white;\r\n        const blackImgSrc = pitboxStyle.black;\r\n\r\n        const whiteImgLoaded = createResolvablePromise();\r\n        const blackImgLoaded = createResolvablePromise();\r\n        const bothImagesLoaded = Promise.all([whiteImgLoaded.promise, blackImgLoaded.promise]);\r\n\r\n        bothImagesLoaded.then(() => this.draw());\r\n\r\n        this.whiteImg = document.createElement(\"img\");\r\n        this.whiteImg.onload = whiteImgLoaded.resolve;\r\n        this.whiteImg.onerror = whiteImgLoaded.reject;\r\n        this.whiteImg.src = whiteImgSrc;\r\n        this.whiteImg.hidden = true;\r\n\r\n        this.blackImg = document.createElement(\"img\");\r\n        this.blackImg.onload = blackImgLoaded.resolve;\r\n        this.whiteImg.onerror = blackImgLoaded.reject;\r\n        this.blackImg.src = blackImgSrc;\r\n        this.blackImg.hidden = true;\r\n\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.canvas.width = pitboxStyle.width;\r\n        this.canvas.height = pitboxStyle.height;\r\n\r\n        const d = document.createElement(\"div\");\r\n        d.appendChild(this.whiteImg);\r\n        d.appendChild(this.blackImg);\r\n        d.appendChild(this.canvas);\r\n\r\n        return d;\r\n    }\r\n\r\n    draw() {\r\n        if (this.canvas !== null && this.blackImg !== null && this.whiteImg !== null) {\r\n            const canvas = this.canvas;\r\n            const blackImg = this.blackImg;\r\n            const whiteImg = this.whiteImg;\r\n\r\n            const ctx = canvas.getContext(\"2d\")!;\r\n            ctx.drawImage(whiteImg, 0, 0);\r\n            ctx.save();\r\n            // roof color\r\n            ctx.globalCompositeOperation = \"multiply\";\r\n            ctx.fillStyle = this.roofColor;\r\n            const roofLocation = PITBOXES[this.boxType].roof;\r\n            ctx.fillRect(roofLocation.left, roofLocation.top, roofLocation.width, roofLocation.height);\r\n\r\n            const boxLocation = PITBOXES[this.boxType].box;\r\n            ctx.fillStyle = this.boxColor;\r\n            ctx.fillRect(boxLocation.left, boxLocation.top, boxLocation.width, boxLocation.height);\r\n\r\n            ctx.restore();\r\n            ctx.save();\r\n            ctx.globalCompositeOperation = \"lighten\";\r\n            ctx.drawImage(blackImg, 0, 0);\r\n            ctx.restore();\r\n        }\r\n    }\r\n}"]}